
state 0
	$accept: .root $end 

	A  shift 5
	B  shift 6
	.  error

	ABCD  goto 2
	ABC  goto 3
	BCD  goto 4
	root  goto 1

state 1
	$accept:  root.$end 

	$end  accept
	.  error


state 2
	root:  ABCD.    (1)

	.  reduce 1 (src line 22)


state 3
	root:  ABC.    (2)

	.  reduce 2 (src line 24)


state 4
	root:  BCD.    (3)

	.  reduce 3 (src line 25)


state 5
	ABCD:  A.B C D 
	ABC:  A.B C 

	B  shift 7
	.  error


state 6
	BCD:  B.C OptD 

	C  shift 8
	.  error


state 7
	ABCD:  A B.C D 
	ABC:  A B.C 

	C  shift 9
	.  error


state 8
	BCD:  B C.OptD 
	OptD: .    (7)

	D  shift 11
	.  reduce 7 (src line 40)

	OptD  goto 10

state 9
	ABCD:  A B C.D 
	ABC:  A B C.    (5)

	D  shift 12
	.  reduce 5 (src line 32)


state 10
	BCD:  B C OptD.    (6)

	.  reduce 6 (src line 36)


state 11
	OptD:  D.    (8)

	.  reduce 8 (src line 42)


state 12
	ABCD:  A B C D.    (4)

	.  reduce 4 (src line 28)


10 terminals, 6 nonterminals
9 grammar rules, 13/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
55 working sets used
memory: parser 4/240000
0 extra closures
7 shift entries, 1 exceptions
5 goto entries
0 entries saved by goto default
Optimizer space used: output 12/240000
12 table entries, 0 zero
maximum spread: 7, maximum offset: 7
